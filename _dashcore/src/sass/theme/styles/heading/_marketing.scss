@use 'sass:math';

.automate-marketing-header {
  .background-shape {
    z-index: 0;
    opacity: 0.2;

    &-main {
      bottom: 0;
      opacity: 1;
      width: 170%;
      height: 150%;
      background-color: $automate-marketing-shape-main-bg-color;
      transform-origin: 0 100%;
      transform: translate(20%, 0) rotate(-30deg);
      position: absolute;

      &.shadow {
        background-color: $automate-marketing-shape-main-shadow;
        transform: translate(19%, 10px) rotate(-30deg);
      }

      @include media-breakpoint-up(md) {
        width: 140%;
      }

      @include media-breakpoint-up(lg) {
        bottom: -40px;
        width: 120%;
      }

      @include media-breakpoint-up(xl) {
        width: 110%;
      }
    }
  }

  //test this
  .rounded-stripe {
    width: 100%;
    background-color: #8abcfe;
    /* border-radius: 40px; */
    height: 20%;
    transform-origin: 0 100%;
    opacity: 1;
    transform: translate(20%, 0) rotate(-30deg);
    bottom: -40px;
    position: absolute;
  }

  .shape-top {
    top: 0;
    background-image: linear-gradient(-57deg, #5634d0 0%, #4a61d1 100%);
    transform: rotate(30deg) translate3D(-45%, -45%, 0);
    max-height: 560px;
    box-shadow: 0 0 25px 50px rgba(#4a61d1, 0.5);
  }

  .main-shape-wrapper {
    width: 90%;

    @include media-breakpoint-down(md) {
      @include center(x, relative);
    }

    @include media-breakpoint-up(lg) {
      @include center(y);
      right: 0;
      width: 50%;
    }

    @include media-breakpoint-up(xl) {
      transform: translateY(-50%) scale(0.75); // translateY is needed to not override transform from lower resolutions and keep the shape centered
    }
  }

  .main-background {
    @media (min-width: 1601px) {
      transform: translate3d(0, -3%, 0);
    }
  }

  .bubbles-wrapper {
    position: relative;

    .icon {
      position: absolute;
      will-change: transform,opacity;
      margin: 0;
    }

    .bubble {
      // number of bubbles: 16
      @for $i from 1 through length($automate-marketing-animations-map) {
        $style: nth($automate-marketing-animations-map, $i);

        &:nth-child(#{$i}) {
          animation: floating
          #{math.div(map-get($style, animation-duration), 3)}s
          ease-in-out
          infinite
          alternate;
          bottom: math.div(map-get($style, bottom), 100) * 100%;
          left: math.div(map-get($style, left), 100) * 100%;

          @include media-breakpoint-up(lg) {
            animation: bubble-left-v #{map-get($style, animation-duration)}s
            linear infinite,
            shake-v 2s ease-in-out infinite alternate;
            bottom: 50%;
          }
        }
      }
    }
  }
}
